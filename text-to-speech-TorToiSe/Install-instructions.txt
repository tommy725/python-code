# Requirements : Nvidia GPU card & and Cuda tool kit install
# I am using this card : https://amzn.to/3mTa7HX
# Working Anaconda enviroment

https://github.com/neonbjb/tortoise-tts
==============================================

git clone https://github.com/neonbjb/tortoise-tts.git
cd tortoise-tts

conda create -n tts-voice2 python=3.8 
conda activate tts-voice2

#install Pytorch from here : https://pytorch.org/get-started/locally/
# what is my Cuda version :
nvcc --version

#The following command is for Cuda 11.7.
pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu117

pip install scipy==1.5.4
pip install tqdm
pip install rotary_embedding_torch
pip install transformers==4.19
pip install tokenizers
pip install inflect
pip install progressbar
pip install einops==0.4.1
pip install unidecode
pip install librosa==0.9.1
pip install numba==0.53
pip install ffmpeg
pip install numpy==1.20.0
pip install torchaudio
pip install threadpoolctl
pip install llvmlite
pip install appdirs

# run this command after pip install 
python setup.py install

#---------------------------------------------------------------------------------------------------

# all the voices are in "tortoise/voices/" :
# in this demo i choose : 'train_dotrice' 
# the outcome will be store in the /results folder

# Run the model :
python tortoise/do_tts.py --text "Hi, Lets go to the mall to buy a new shirt" --voice train_dotrice --preset fast

--voice 
--preset 	'ultra_fast' , 'fast' , 'standard' , high_quality'
--output_path 	choose a directory other the 'results'

============================================================================================
This script provides tools for reading large(!!!) amounts of text :
about 5 hours !!!

python tortoise/read.py --textfile sample.txt --voice train_dotrice

=====================================================================================

Create my own voice :
--------------------

To add new voices to Tortoise, you will need to do the following:

Gather audioclips of your speaker(s). Good sources are YouTube interviews (you can use youtube-dl to fetch the audio), audiobooks or podcasts. Guidelines for good clips are in the next section.
Cut your clips into ~10 second segments. You want at least 3 clips. More is better, but I only experimented with up to 5 in my testing.
Save the clips as a WAV file with floating point format and a 22,050 sample rate.


Create a subdirectory in voices/
Put your clips in that subdirectory. 
I left in My Github several sample wav files

Run this :

python tortoise/do_tts.py --text "Hi, Lets go to the park , and play basketball" --voice Eran --preset fast
